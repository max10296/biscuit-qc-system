-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.audit_log
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    table_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    record_id uuid NOT NULL,
    operation character varying(20) COLLATE pg_catalog."default" NOT NULL,
    old_values jsonb,
    new_values jsonb,
    changed_fields text[] COLLATE pg_catalog."default",
    user_id character varying(255) COLLATE pg_catalog."default",
    ip_address inet,
    user_agent text COLLATE pg_catalog."default",
    "timestamp" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT audit_log_pkey PRIMARY KEY (id)
);

COMMENT ON TABLE public.audit_log
    IS 'Complete audit trail for all database changes';

CREATE TABLE IF NOT EXISTS public.backup_metadata
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    backup_type character varying(50) COLLATE pg_catalog."default" NOT NULL,
    backup_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    file_path character varying(500) COLLATE pg_catalog."default",
    file_size bigint,
    compression_type character varying(20) COLLATE pg_catalog."default",
    tables_included text[] COLLATE pg_catalog."default",
    record_counts jsonb,
    backup_started timestamp with time zone NOT NULL,
    backup_completed timestamp with time zone,
    backup_duration integer,
    status character varying(20) COLLATE pg_catalog."default" DEFAULT 'pending'::character varying,
    error_message text COLLATE pg_catalog."default",
    created_by character varying(255) COLLATE pg_catalog."default",
    retention_until timestamp with time zone,
    CONSTRAINT backup_metadata_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.data_exports
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    export_type character varying(50) COLLATE pg_catalog."default" NOT NULL,
    export_format character varying(20) COLLATE pg_catalog."default" NOT NULL,
    export_parameters jsonb,
    file_name character varying(255) COLLATE pg_catalog."default",
    file_size bigint,
    record_count integer,
    exported_by character varying(255) COLLATE pg_catalog."default" NOT NULL,
    export_date timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    download_count integer DEFAULT 0,
    last_downloaded timestamp with time zone,
    expires_at timestamp with time zone,
    status character varying(20) COLLATE pg_catalog."default" DEFAULT 'completed'::character varying,
    CONSTRAINT data_exports_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.notifications
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    notification_type character varying(50) COLLATE pg_catalog."default" NOT NULL,
    title character varying(255) COLLATE pg_catalog."default" NOT NULL,
    message text COLLATE pg_catalog."default" NOT NULL,
    severity character varying(20) COLLATE pg_catalog."default" DEFAULT 'info'::character varying,
    target_users jsonb,
    related_entity character varying(50) COLLATE pg_catalog."default",
    related_id uuid,
    metadata jsonb,
    is_read boolean DEFAULT false,
    is_acknowledged boolean DEFAULT false,
    acknowledged_by character varying(255) COLLATE pg_catalog."default",
    acknowledged_at timestamp with time zone,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    expires_at timestamp with time zone,
    CONSTRAINT notifications_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.performance_metrics
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    metric_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    metric_category character varying(50) COLLATE pg_catalog."default" NOT NULL,
    metric_value numeric(15, 6) NOT NULL,
    target_value numeric(15, 6),
    unit character varying(20) COLLATE pg_catalog."default",
    product_id uuid,
    report_id uuid,
    measurement_date date NOT NULL,
    measurement_time timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT performance_metrics_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.product_certifications
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    product_id uuid NOT NULL,
    certification_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    certification_body character varying(255) COLLATE pg_catalog."default",
    certification_number character varying(100) COLLATE pg_catalog."default",
    issue_date date,
    expiry_date date,
    scope text COLLATE pg_catalog."default",
    requirements text COLLATE pg_catalog."default",
    audit_frequency character varying(100) COLLATE pg_catalog."default",
    last_audit_date date,
    next_audit_date date,
    documents jsonb,
    is_active boolean DEFAULT true,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT product_certifications_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.product_cost_breakdown
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    product_id uuid NOT NULL,
    cost_category character varying(100) COLLATE pg_catalog."default" NOT NULL,
    cost_subcategory character varying(100) COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    cost_per_unit numeric(15, 6),
    currency character varying(10) COLLATE pg_catalog."default" DEFAULT 'USD'::character varying,
    calculation_method character varying(100) COLLATE pg_catalog."default",
    last_updated date,
    notes text COLLATE pg_catalog."default",
    is_active boolean DEFAULT true,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT product_cost_breakdown_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.product_custom_variables
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    product_id uuid NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    value numeric(15, 6),
    description text COLLATE pg_catalog."default",
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT product_custom_variables_pkey PRIMARY KEY (id),
    CONSTRAINT product_custom_variables_product_id_name_key UNIQUE (product_id, name)
);

COMMENT ON TABLE public.product_custom_variables
    IS 'Custom calculation variables per product';

CREATE TABLE IF NOT EXISTS public.product_packaging_details
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    product_id uuid NOT NULL,
    packaging_level character varying(50) COLLATE pg_catalog."default" NOT NULL,
    material_type character varying(100) COLLATE pg_catalog."default",
    material_specification text COLLATE pg_catalog."default",
    dimensions jsonb,
    weight numeric(10, 3),
    weight_unit character varying(20) COLLATE pg_catalog."default",
    color character varying(100) COLLATE pg_catalog."default",
    printing_details text COLLATE pg_catalog."default",
    barcode_info jsonb,
    recycling_info jsonb,
    supplier character varying(255) COLLATE pg_catalog."default",
    cost_per_unit numeric(10, 4),
    minimum_order_quantity integer,
    lead_time_days integer,
    is_active boolean DEFAULT true,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT product_packaging_details_pkey PRIMARY KEY (id),
    CONSTRAINT product_packaging_details_product_id_packaging_level_key UNIQUE (product_id, packaging_level)
);

CREATE TABLE IF NOT EXISTS public.product_parameters
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    section_id uuid NOT NULL,
    parameter_id character varying(100) COLLATE pg_catalog."default" NOT NULL,
    parameter_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    parameter_type character varying(50) COLLATE pg_catalog."default" DEFAULT 'text'::character varying,
    default_value text COLLATE pg_catalog."default",
    validation_rule jsonb,
    calculation_formula jsonb,
    order_index integer DEFAULT 0,
    is_required boolean DEFAULT false,
    is_active boolean DEFAULT true,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT product_parameters_pkey PRIMARY KEY (id),
    CONSTRAINT product_parameters_section_id_parameter_id_key UNIQUE (section_id, parameter_id)
);

COMMENT ON TABLE public.product_parameters
    IS 'Individual parameters within product sections';

CREATE TABLE IF NOT EXISTS public.product_production_details
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    product_id uuid NOT NULL,
    production_line_id character varying(100) COLLATE pg_catalog."default",
    production_capacity integer,
    setup_time_minutes integer,
    changeover_time_minutes integer,
    minimum_batch_size integer,
    maximum_batch_size integer,
    optimal_batch_size integer,
    production_steps jsonb,
    equipment_required jsonb,
    personnel_required jsonb,
    quality_checkpoints jsonb,
    standard_operating_procedure text COLLATE pg_catalog."default",
    hazard_analysis jsonb,
    is_active boolean DEFAULT true,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT product_production_details_pkey PRIMARY KEY (id),
    CONSTRAINT product_production_details_product_id_production_line_id_key UNIQUE (product_id, production_line_id)
);

CREATE TABLE IF NOT EXISTS public.product_quality_attributes
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    product_id uuid NOT NULL,
    attribute_category character varying(100) COLLATE pg_catalog."default" NOT NULL,
    attribute_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    attribute_description text COLLATE pg_catalog."default",
    acceptable_range text COLLATE pg_catalog."default",
    rejection_criteria text COLLATE pg_catalog."default",
    inspection_method character varying(255) COLLATE pg_catalog."default",
    sample_size character varying(100) COLLATE pg_catalog."default",
    aql_level character varying(20) COLLATE pg_catalog."default",
    severity character varying(50) COLLATE pg_catalog."default",
    is_active boolean DEFAULT true,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT product_quality_attributes_pkey PRIMARY KEY (id),
    CONSTRAINT product_quality_attributes_product_id_attribute_category_at_key UNIQUE (product_id, attribute_category, attribute_name)
);

CREATE TABLE IF NOT EXISTS public.product_raw_materials
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    product_id uuid NOT NULL,
    material_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    material_code character varying(100) COLLATE pg_catalog."default",
    material_type character varying(100) COLLATE pg_catalog."default",
    quantity_per_batch numeric(15, 6),
    unit character varying(50) COLLATE pg_catalog."default",
    supplier_name character varying(255) COLLATE pg_catalog."default",
    supplier_code character varying(100) COLLATE pg_catalog."default",
    specification_reference character varying(255) COLLATE pg_catalog."default",
    allergen_status character varying(100) COLLATE pg_catalog."default",
    gmo_status character varying(100) COLLATE pg_catalog."default",
    halal_status character varying(100) COLLATE pg_catalog."default",
    kosher_status character varying(100) COLLATE pg_catalog."default",
    organic_status character varying(100) COLLATE pg_catalog."default",
    cost_per_unit numeric(10, 4),
    shelf_life_days integer,
    storage_conditions text COLLATE pg_catalog."default",
    is_active boolean DEFAULT true,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT product_raw_materials_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.product_sections
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    product_id uuid NOT NULL,
    section_id character varying(100) COLLATE pg_catalog."default" NOT NULL,
    section_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    section_type character varying(50) COLLATE pg_catalog."default" DEFAULT 'quality_control'::character varying,
    order_index integer DEFAULT 0,
    is_active boolean DEFAULT true,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT product_sections_pkey PRIMARY KEY (id),
    CONSTRAINT product_sections_product_id_section_id_key UNIQUE (product_id, section_id)
);

COMMENT ON TABLE public.product_sections
    IS 'Dynamic form sections for each product';

CREATE TABLE IF NOT EXISTS public.product_specifications
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    product_id uuid NOT NULL,
    specification_category character varying(100) COLLATE pg_catalog."default" NOT NULL,
    specification_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    specification_value text COLLATE pg_catalog."default",
    min_value numeric(15, 6),
    max_value numeric(15, 6),
    target_value numeric(15, 6),
    unit character varying(50) COLLATE pg_catalog."default",
    test_method character varying(255) COLLATE pg_catalog."default",
    frequency character varying(100) COLLATE pg_catalog."default",
    critical_control_point boolean DEFAULT false,
    notes text COLLATE pg_catalog."default",
    is_active boolean DEFAULT true,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT product_specifications_pkey PRIMARY KEY (id),
    CONSTRAINT product_specifications_product_id_specification_category_sp_key UNIQUE (product_id, specification_category, specification_name)
);

CREATE TABLE IF NOT EXISTS public.product_testing_protocols
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    product_id uuid NOT NULL,
    test_category character varying(100) COLLATE pg_catalog."default" NOT NULL,
    test_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    test_description text COLLATE pg_catalog."default",
    test_method character varying(255) COLLATE pg_catalog."default",
    test_equipment character varying(255) COLLATE pg_catalog."default",
    sample_size character varying(100) COLLATE pg_catalog."default",
    frequency character varying(100) COLLATE pg_catalog."default",
    acceptance_criteria text COLLATE pg_catalog."default",
    reference_standard character varying(255) COLLATE pg_catalog."default",
    responsible_department character varying(100) COLLATE pg_catalog."default",
    documentation_required jsonb,
    is_mandatory boolean DEFAULT true,
    is_active boolean DEFAULT true,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT product_testing_protocols_pkey PRIMARY KEY (id),
    CONSTRAINT product_testing_protocols_product_id_test_category_test_nam_key UNIQUE (product_id, test_category, test_name)
);

CREATE TABLE IF NOT EXISTS public.products
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    product_id character varying(100) COLLATE pg_catalog."default" NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    code character varying(50) COLLATE pg_catalog."default" NOT NULL,
    batch_code character varying(50) COLLATE pg_catalog."default",
    ingredients_type character varying(50) COLLATE pg_catalog."default" DEFAULT 'without-cocoa'::character varying,
    has_cream boolean DEFAULT false,
    standard_weight numeric(10, 3) DEFAULT 185.0,
    shelf_life integer DEFAULT 6,
    cartons_per_pallet integer DEFAULT 56,
    packs_per_box integer DEFAULT 6,
    boxes_per_carton integer DEFAULT 14,
    empty_box_weight numeric(10, 3) DEFAULT 21.0,
    empty_carton_weight numeric(10, 3) DEFAULT 680.0,
    aql_level character varying(20) COLLATE pg_catalog."default" DEFAULT '1.5'::character varying,
    day_format character varying(10) COLLATE pg_catalog."default" DEFAULT 'DD'::character varying,
    month_format character varying(20) COLLATE pg_catalog."default" DEFAULT 'letter'::character varying,
    description text COLLATE pg_catalog."default",
    notes text COLLATE pg_catalog."default",
    is_active boolean DEFAULT true,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    created_by character varying(100) COLLATE pg_catalog."default",
    updated_by character varying(100) COLLATE pg_catalog."default",
    doc_code character varying(50) COLLATE pg_catalog."default",
    issue_no character varying(50) COLLATE pg_catalog."default",
    review_no character varying(50) COLLATE pg_catalog."default",
    issue_date date,
    review_date date,
    product_type character varying(50) COLLATE pg_catalog."default" DEFAULT 'standard'::character varying,
    production_line character varying(100) COLLATE pg_catalog."default",
    packaging_type character varying(100) COLLATE pg_catalog."default",
    weight_tolerance_min numeric(10, 3),
    weight_tolerance_max numeric(10, 3),
    temperature_min numeric(5, 2),
    temperature_max numeric(5, 2),
    humidity_min numeric(5, 2),
    humidity_max numeric(5, 2),
    visual_standards jsonb,
    quality_parameters jsonb,
    packaging_materials jsonb,
    allergen_info jsonb,
    nutritional_info jsonb,
    manufacturing_process jsonb,
    storage_conditions text COLLATE pg_catalog."default",
    distribution_requirements text COLLATE pg_catalog."default",
    regulatory_compliance jsonb,
    certifications jsonb,
    supplier_info jsonb,
    cost_info jsonb,
    images jsonb,
    documents jsonb,
    tags text[] COLLATE pg_catalog."default",
    metadata jsonb,
    CONSTRAINT products_pkey PRIMARY KEY (id),
    CONSTRAINT products_product_id_key UNIQUE (product_id)
);

COMMENT ON TABLE public.products
    IS 'Master product configurations and specifications';

CREATE TABLE IF NOT EXISTS public.report_aggregates
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    report_id uuid NOT NULL,
    product_id uuid NOT NULL,
    aggregation_type character varying(50) COLLATE pg_catalog."default" NOT NULL,
    aggregation_key character varying(100) COLLATE pg_catalog."default" NOT NULL,
    total_reports integer DEFAULT 0,
    passed_reports integer DEFAULT 0,
    failed_reports integer DEFAULT 0,
    average_score numeric(5, 2),
    total_defects integer DEFAULT 0,
    total_inspected integer DEFAULT 0,
    pass_rate numeric(5, 2),
    data_snapshot jsonb,
    calculated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT report_aggregates_pkey PRIMARY KEY (id),
    CONSTRAINT report_aggregates_product_id_aggregation_type_aggregation_k_key UNIQUE (product_id, aggregation_type, aggregation_key)
);

CREATE TABLE IF NOT EXISTS public.report_pallets
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    report_id uuid NOT NULL,
    pallet_number integer NOT NULL,
    start_time time without time zone,
    end_time time without time zone,
    cartons_count integer DEFAULT 0,
    weight numeric(10, 3),
    status character varying(50) COLLATE pg_catalog."default" DEFAULT 'active'::character varying,
    notes text COLLATE pg_catalog."default",
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT report_pallets_pkey PRIMARY KEY (id),
    CONSTRAINT report_pallets_report_id_pallet_number_key UNIQUE (report_id, pallet_number)
);

COMMENT ON TABLE public.report_pallets
    IS 'Pallet tracking data for production batches';

CREATE TABLE IF NOT EXISTS public.report_parameters
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    report_id uuid NOT NULL,
    section_id character varying(100) COLLATE pg_catalog."default" NOT NULL,
    parameter_id character varying(100) COLLATE pg_catalog."default" NOT NULL,
    parameter_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    value text COLLATE pg_catalog."default",
    numeric_value numeric(15, 6),
    time_slot character varying(20) COLLATE pg_catalog."default",
    column_index integer,
    row_index integer,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT report_parameters_pkey PRIMARY KEY (id)
);

COMMENT ON TABLE public.report_parameters
    IS 'Individual parameter values for each report';

CREATE TABLE IF NOT EXISTS public.report_sections
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    report_id uuid NOT NULL,
    section_id character varying(100) COLLATE pg_catalog."default" NOT NULL,
    section_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    section_data jsonb,
    notes text COLLATE pg_catalog."default",
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT report_sections_pkey PRIMARY KEY (id),
    CONSTRAINT report_sections_report_id_section_id_key UNIQUE (report_id, section_id)
);

COMMENT ON TABLE public.report_sections
    IS 'Filled section data for each report';

CREATE TABLE IF NOT EXISTS public.report_signatures
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    report_id uuid NOT NULL,
    signature_id uuid NOT NULL,
    signature_type character varying(50) COLLATE pg_catalog."default" NOT NULL,
    signed_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    signed_by character varying(255) COLLATE pg_catalog."default" NOT NULL,
    ip_address inet,
    user_agent text COLLATE pg_catalog."default",
    CONSTRAINT report_signatures_pkey PRIMARY KEY (id),
    CONSTRAINT report_signatures_report_id_signature_type_key UNIQUE (report_id, signature_type)
);

COMMENT ON TABLE public.report_signatures
    IS 'Applied signatures for report approval workflow';

CREATE TABLE IF NOT EXISTS public.reports
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    product_id uuid NOT NULL,
    product_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    batch_no character varying(100) COLLATE pg_catalog."default" NOT NULL,
    report_date date NOT NULL,
    shift character varying(50) COLLATE pg_catalog."default" NOT NULL,
    shift_duration character varying(20) COLLATE pg_catalog."default" DEFAULT '8_hours'::character varying,
    production_line character varying(50) COLLATE pg_catalog."default",
    operator_name character varying(255) COLLATE pg_catalog."default",
    supervisor_name character varying(255) COLLATE pg_catalog."default",
    qc_inspector character varying(255) COLLATE pg_catalog."default",
    status character varying(50) COLLATE pg_catalog."default" DEFAULT 'draft'::character varying,
    score numeric(5, 2),
    defects_count integer DEFAULT 0,
    total_inspected integer DEFAULT 0,
    pass_rate numeric(5, 2),
    notes text COLLATE pg_catalog."default",
    rejection_reason text COLLATE pg_catalog."default",
    approved_by character varying(255) COLLATE pg_catalog."default",
    approved_at timestamp with time zone,
    submitted_by character varying(255) COLLATE pg_catalog."default",
    submitted_at timestamp with time zone,
    form_data jsonb,
    calculations jsonb,
    time_slots jsonb,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    created_by character varying(100) COLLATE pg_catalog."default",
    updated_by character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT reports_pkey PRIMARY KEY (id)
);

COMMENT ON TABLE public.reports
    IS 'Quality control report instances';

CREATE TABLE IF NOT EXISTS public.sessions
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    session_key character varying(255) COLLATE pg_catalog."default" NOT NULL,
    user_id character varying(255) COLLATE pg_catalog."default",
    data jsonb,
    expires_at timestamp with time zone,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    ip_address inet,
    user_agent text COLLATE pg_catalog."default",
    CONSTRAINT sessions_pkey PRIMARY KEY (id),
    CONSTRAINT sessions_session_key_key UNIQUE (session_key)
);

COMMENT ON TABLE public.sessions
    IS 'User session management and form state persistence';

CREATE TABLE IF NOT EXISTS public.settings
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    key character varying(255) COLLATE pg_catalog."default" NOT NULL,
    value jsonb,
    data_type character varying(50) COLLATE pg_catalog."default" DEFAULT 'string'::character varying,
    description text COLLATE pg_catalog."default",
    category character varying(100) COLLATE pg_catalog."default" DEFAULT 'general'::character varying,
    is_system boolean DEFAULT false,
    is_encrypted boolean DEFAULT false,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    created_by character varying(100) COLLATE pg_catalog."default",
    updated_by character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT settings_pkey PRIMARY KEY (id),
    CONSTRAINT settings_key_key UNIQUE (key)
);

COMMENT ON TABLE public.settings
    IS 'System configuration and user preferences';

CREATE TABLE IF NOT EXISTS public.signatures
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    role character varying(100) COLLATE pg_catalog."default" NOT NULL,
    department character varying(100) COLLATE pg_catalog."default",
    signature_data text COLLATE pg_catalog."default",
    is_default boolean DEFAULT false,
    is_active boolean DEFAULT true,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT signatures_pkey PRIMARY KEY (id)
);

COMMENT ON TABLE public.signatures
    IS 'Digital signature templates and configurations';

ALTER TABLE IF EXISTS public.performance_metrics
    ADD CONSTRAINT performance_metrics_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.performance_metrics
    ADD CONSTRAINT performance_metrics_report_id_fkey FOREIGN KEY (report_id)
    REFERENCES public.reports (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_certifications
    ADD CONSTRAINT product_certifications_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_product_certifications_product_id
    ON public.product_certifications(product_id);


ALTER TABLE IF EXISTS public.product_cost_breakdown
    ADD CONSTRAINT product_cost_breakdown_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_product_cost_breakdown_product_id
    ON public.product_cost_breakdown(product_id);


ALTER TABLE IF EXISTS public.product_custom_variables
    ADD CONSTRAINT product_custom_variables_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_product_variables_product_id
    ON public.product_custom_variables(product_id);


ALTER TABLE IF EXISTS public.product_packaging_details
    ADD CONSTRAINT product_packaging_details_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_product_packaging_details_product_id
    ON public.product_packaging_details(product_id);


ALTER TABLE IF EXISTS public.product_parameters
    ADD CONSTRAINT product_parameters_section_id_fkey FOREIGN KEY (section_id)
    REFERENCES public.product_sections (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_product_parameters_section_id
    ON public.product_parameters(section_id);


ALTER TABLE IF EXISTS public.product_production_details
    ADD CONSTRAINT product_production_details_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_product_production_details_product_id
    ON public.product_production_details(product_id);


ALTER TABLE IF EXISTS public.product_quality_attributes
    ADD CONSTRAINT product_quality_attributes_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_product_quality_attributes_product_id
    ON public.product_quality_attributes(product_id);


ALTER TABLE IF EXISTS public.product_raw_materials
    ADD CONSTRAINT product_raw_materials_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_product_raw_materials_product_id
    ON public.product_raw_materials(product_id);


ALTER TABLE IF EXISTS public.product_sections
    ADD CONSTRAINT product_sections_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_product_sections_product_id
    ON public.product_sections(product_id);


ALTER TABLE IF EXISTS public.product_specifications
    ADD CONSTRAINT product_specifications_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_product_specifications_product_id
    ON public.product_specifications(product_id);


ALTER TABLE IF EXISTS public.product_testing_protocols
    ADD CONSTRAINT product_testing_protocols_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_product_testing_protocols_product_id
    ON public.product_testing_protocols(product_id);


ALTER TABLE IF EXISTS public.report_aggregates
    ADD CONSTRAINT report_aggregates_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.report_aggregates
    ADD CONSTRAINT report_aggregates_report_id_fkey FOREIGN KEY (report_id)
    REFERENCES public.reports (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.report_pallets
    ADD CONSTRAINT report_pallets_report_id_fkey FOREIGN KEY (report_id)
    REFERENCES public.reports (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_report_pallets_report_id
    ON public.report_pallets(report_id);


ALTER TABLE IF EXISTS public.report_parameters
    ADD CONSTRAINT report_parameters_report_id_fkey FOREIGN KEY (report_id)
    REFERENCES public.reports (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_report_parameters_report_id
    ON public.report_parameters(report_id);


ALTER TABLE IF EXISTS public.report_sections
    ADD CONSTRAINT report_sections_report_id_fkey FOREIGN KEY (report_id)
    REFERENCES public.reports (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_report_sections_report_id
    ON public.report_sections(report_id);


ALTER TABLE IF EXISTS public.report_signatures
    ADD CONSTRAINT report_signatures_report_id_fkey FOREIGN KEY (report_id)
    REFERENCES public.reports (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_report_signatures_report_id
    ON public.report_signatures(report_id);


ALTER TABLE IF EXISTS public.report_signatures
    ADD CONSTRAINT report_signatures_signature_id_fkey FOREIGN KEY (signature_id)
    REFERENCES public.signatures (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_report_signatures_signature_id
    ON public.report_signatures(signature_id);


ALTER TABLE IF EXISTS public.reports
    ADD CONSTRAINT reports_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_reports_product_id
    ON public.reports(product_id);

END;